using System.ComponentModel;
using System.IO;
using System.Text;
using System.Windows;
using System.Xml;
using wcc_lite_gui_wpf.ViewModels;
using Xceed.Wpf.AvalonDock.Layout.Serialization;

namespace wcc_lite_gui_wpf
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow(IViewModel viewModel)
        {
            InitializeComponent();
            DataContext = viewModel;

            this.Loaded += new RoutedEventHandler(OnWindowLoaded);


        }

        private void OnWindowLoaded(object sender, RoutedEventArgs e)
        {
            LoadDockingManagerLayout();
        }
        protected override void OnClosing(CancelEventArgs e)
        {
            // We need to set up how we might cancel the closure if the user has unsaved work...
            if (!e.Cancel)
            {
                SaveDockingManagerLayout();
            }
            base.OnClosing(e);
        }

        private void SaveDockingManagerLayout()
        {
            var serializer = new XmlLayoutSerializer(_manager);
            var settings = new XmlWriterSettings()
            {
                Indent = true,
                IndentChars = "    ",
                Encoding = Encoding.UTF8,
            };

            using (var stream = File.Open(@".\AvalonDock.config", FileMode.Create, FileAccess.Write))
            using (var writer = XmlWriter.Create(stream, settings))
            {
                writer.WriteComment(" AUTO GENERATED BY AVALONDOCK ");
                serializer.Serialize(writer);
            }
        }

        private void LoadDockingManagerLayout()
        {
            if (File.Exists(@".\AvalonDock.config"))
            {
                var serializer = new XmlLayoutSerializer(_manager);
                serializer.Deserialize(@".\AvalonDock.config");
            }
        }

        private void Exit_Click(object sender, RoutedEventArgs e)
        {
            this.Close();
        }
    }
}
